---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: ensure generated directory exists
  local_action:
    module: file
    path: generated/
    state: directory

- name: package each bundle into a zip archive
  local_action:
    module: archive
    format: zip
    path: "{{ outer_item }}/*"
    dest: "generated/{{ outer_item | basename }}.zip"
    remove: no

- name: check for existing OpenIGC bundles that are registered
  shell: >
          curl
          -X GET "https://{{ ibm_infosvr_openigc_services_host }}:{{ ibm_infosvr_openigc_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_openigc_admin_user }}:{{ ibm_infosvr_openigc_admin_user_pwd }}
          {% if ibm_infosvr_openigc_verify_selfsigned_ssl is defined and ibm_infosvr_openigc_verify_selfsigned_ssl %}--cacert cache/__ibm_infosvr_cert_root.crt{% endif %}
          -f
  args:
    warn: False
  delegate_to: localhost
  register: ibm_infosvr_openigc_existing_bundles

- name: create OpenIGC bundles that are not registered
  shell: >
          curl
          -X POST "https://{{ ibm_infosvr_openigc_services_host }}:{{ ibm_infosvr_openigc_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_openigc_admin_user }}:{{ ibm_infosvr_openigc_admin_user_pwd }}
          {% if ibm_infosvr_openigc_verify_selfsigned_ssl is defined and ibm_infosvr_openigc_verify_selfsigned_ssl %}--cacert cache/__ibm_infosvr_cert_root.crt{% endif %}
          -f -F file=@generated/{{ outer_item | basename }}.zip
  args:
    warn: False
  delegate_to: localhost
  when: not ((outer_item | basename) in (ibm_infosvr_openigc_existing_bundles.stdout | to_json))

- name: update OpenIGC bundles that are already registered
  shell: >
          curl
          -X PUT "https://{{ ibm_infosvr_openigc_services_host }}:{{ ibm_infosvr_openigc_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_openigc_admin_user }}:{{ ibm_infosvr_openigc_admin_user_pwd }}
          {% if ibm_infosvr_openigc_verify_selfsigned_ssl is defined and ibm_infosvr_openigc_verify_selfsigned_ssl %}--cacert cache/__ibm_infosvr_cert_root.crt{% endif %}
          -f -F file=@generated/{{ outer_item | basename }}.zip
  args:
    warn: False
  delegate_to: localhost
  when: (outer_item | basename) in (ibm_infosvr_openigc_existing_bundles.stdout | to_json)
